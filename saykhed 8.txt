Slip 8
interface Shape
{
	double area();
}

final class Circle implements Shape
{
	private double radius;

	public Circle(double radius)
	{
		this.radius = radius;
	}

	@Override
	public double area()
	{
		return Math.PI * radius * radius;
	}
}

final class Sphere implements Shape
{
	private double radius;

	public Sphere(double radius)
	{
		this.radius = radius;
	}

	@Override
	public double area()
	{
		return 4 * Math.PI * radius * radius;
	}
}

public class Slip8a
{
	public static void main(String[] args)
	{
		Circle circle = new Circle(5.0);
		Sphere sphere = new Sphere(3.0);

		// Calculate and display the area of the circle
		System.out.println("Area of Circle: " + circle.area());

		// Calculate and display the surface area of the sphere
		System.out.println("Surface Area of Sphere: " + sphere.area());
	}
}

Slip 8
import java.io.File;

public class Slip8b
{
	public void printFileNames(File[] a, int i)
	{
		if (i == a.length)
		{
			return;
		}
		if (a[i].isFile())
		{
			System.out.println("i: " + i);
			if (a[i].getName().endsWith(".txt"))
			{
				System.out.println(a[i].getName());  
			}
		}

		printFileNames(a, i + 1);
	}

	public static void main(String[] args)
	{
		String path = "E:\BBA CA\SEM-5 Peactical slips\Java";

		File fObj = new File(path);

		Slip8b obj = new Slip8b();
		if (fObj.exists() && fObj.isDirectory())
		{
			File a[] = fObj.listFiles();
			System.out.println("Displaying Files from the directory: " + fObj);  
			obj.printFileNames(a, 0);
		}
	}
}

Slip 8
def find_repeated_items(t):
 from collections import Counter
 counts = Counter(t)
 repeated = [item for item, count in counts.items() if count > 1]
 return repeated

# Example usage
t = (1, 2, 3, 2, 4, 5, 1, 6, 7, 1)
repeated_items = find_repeated_items(t)
print("Repeated items:", repeated_items)


Slip 8
class StringManipulator:
 def __init__(self):
  self.text = ""

 def get_String(self):
  self.text = input("Enter a string: ")

 def print_String(self):
  print(self.text.upper())

 def reverse_words(self):
  words = self.text.split()
  reversed_words = ' '.join(reversed(words))
  print(reversed_words.lower())

# Example usage
manipulator = StringManipulator()

# Get a string from the user
manipulator.get_String()

# Print the string in uppercase
manipulator.print_String()

# Print the reversed words in lowercase
manipulator.reverse_words()

