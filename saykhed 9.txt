Slip 9
public class Slip9a
{
	public static void main(String[] args)
	{
		int n = 4; // Number of rows

		for (int i = 1; i <= n; i++)
		{
			int numToPrint = (i % 2 == 1) ? 1 : 0; // Initialize the first number

			for (int j = 1; j <= i; j++)
			{
				System.out.print(numToPrint + " ");
				numToPrint = 1 - numToPrint; // Toggle between 0 and 1
			}

			System.out.println(); // Move to the next line after each row
		}
	}
}


Slip 9
import java.util.Scanner;

class InvaildData extends Exception
{
	public InvaildData(String s)
	{
		super(s);
	}
}

public class Slip9b
{
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		try
		{
			System.out.println("Enter the PAN Number");
			String pan = sc.next();
			vailidatePan(pan);
			System.out.println("Enter Mobile Number");
			String mobileNo = sc.next();
			vailidateMobileNo(mobileNo);
			System.out.println("Data is valid");
			System.out.println("PAN no: " + pan);
			System.out.println("Mobile no: " + mobileNo);
		}
		catch (InvaildData e)
		{
			System.err.println(e.getMessage());
		}
		sc.close();
	}

	public static void vailidatePan(String s) throws InvaildData
	{
		if (!s.matches("[A-Z]{5}[0-9]{4}[A-Z]{1}"))
		{
			throw new InvaildData("Invalid PAN Number");
		}
	}

	public static void vailidateMobileNo(String s) throws InvaildData
	{
		if (!s.matches("[0-9]{10}"))
		{
			throw new InvaildData("Invalid Mobile Number");
		}
	}
}


Slip 9
class StringReverser:
 def __init__(self, text=""):
  self.text = text

 def set_text(self, text):
  self.text = text

 def reverse_words(self):
  words = self.text.split()
  reversed_words = ' '.join(reversed(words))
  return reversed_words

# Example usage
reverser = StringReverser()

# Input a string
input_text = input("Enter a string: ")
reverser.set_text(input_text)

# Reverse the string word by word and print it
reversed_text = reverser.reverse_words()
print("Reversed string:", reversed_text)


Slip 9
import tkinter as tk
from tkinter import messagebox

def is_prime(n):
 if n <= 1:
  return False
 for i in range(2, int(n**0.5) + 1):
  if n % i == 0:
   return False
 return True

def is_perfect(n):
 return n == sum(i for i in range(1, n) if n % i == 0)

def is_armstrong(n):
 digits = [int(d) for d in str(n)]
 power = len(digits)
 return n == sum(d ** power for d in digits)

def check_number():
 try:
  n = int(entry.get())
 except ValueError:
  messagebox.showerror("Input Error", "Please enter a valid integer.")
  return

 if var.get() == 'Prime':
  result = is_prime(n)
  message = f"{n} is {'a Prime number' if result else 'not a Prime number'}."
 elif var.get() == 'Perfect':
  result = is_perfect(n)
  message = f"{n} is {'a Perfect number' if result else 'not a Perfect number'}."
 elif var.get() == 'Armstrong':
  result = is_armstrong(n)
  message = f"{n} is {'an Armstrong number' if result else 'not an Armstrong number'}."
 else:
  message = "Please select a number type to check."
 
 messagebox.showinfo("Result", message)

# Create the main window
root = tk.Tk()
root.title("Number Checker")

# Create and place widgets
tk.Label(root, text="Enter a number:").pack(pady=10)
entry = tk.Entry(root)
entry.pack(pady=5)

var = tk.StringVar(value='Prime')
tk.Radiobutton(root, text="Prime", variable=var, value='Prime').pack()
tk.Radiobutton(root, text="Perfect", variable=var, value='Perfect').pack()
tk.Radiobutton(root, text="Armstrong", variable=var, value='Armstrong').pack()

tk.Button(root, text="Check", command=check_number).pack(pady=20)

# Start the GUI event loop
root.mainloop()

